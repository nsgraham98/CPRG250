create table sis_student(
    student_id INTEGER CONSTRAINT sis_student_pk PRIMARY KEY,
    first_name NVARCHAR2(50) NOT NULL,
    last_name NVARCHAR2(50) NOT NULL,
    status NCHAR(2) NOT NULL CONSTRAINT sis_student_status_ck check (status in('A', 'AP', 'S', 'E')),
    status_date DATE NOT NULL,
    phone VARCHAR2(12) NOT NULL CONSTRAINT sis_student_phone_ck check (REGEXP_LIKE(phone, '^[0-9]{3}\.[0-9]{3}\.[0-9]{4}$')),
    email NVARCHAR2(100) NOT NULL CONSTRAINT sis_student_email_uk UNIQUE(email) check (REGEXP_LIKE(email, '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'))
);

-- create table sis_student_course_record(
--     course_registration# INTEGER CONSTRAINT sis_course_registration#_pk PRIMARY KEY sis_course_registration_fk REFERENCES sis_student(course_registration#), 
--     semester_code NCHAR(10) CONSTRAINT sis_semester_code_pk PRIMARY KEY sis_semester_code_fk REFERENCES sis_student(semester_code),
--     course_code NCHAR(7) NOT NULL CONSTRAINT sis_course_code_ck CHECK (REGEXP_LIKE(course_code, '^[A-Za-z]{4}[0-9]{3}$')),
--     student_id INTEGER CONSTRAINT sis_student_id_pk PRIMARY KEY sis_student_id_fk REFERENCES sis_student(student_id),
--     credential# INTEGER NOT NULL CONSTRAINT sis_credential_fk REFERENCES sis_student_credential(credential#),
--     letter_grade NVARCHAR(2) CONSTRAINT CHECK(REGEXP_LIKE(letter_grade, '^[A-D][+-]?|F|I$'))
-- );

CREATE TABLE sis_student_course_record (
    course_registration# INTEGER,
    semester_code NCHAR(10),
    course_code NCHAR(7) NOT NULL CONSTRAINT sis_course_code_ck CHECK (REGEXP_LIKE(course_code, '^[A-Za-z]{4}[0-9]{3}$')),
    student_id INTEGER,
    credential# INTEGER NOT NULL CONSTRAINT sis_credential_fk REFERENCES sis_student_credential(credential#),
    letter_grade NVARCHAR(2) CONSTRAINT sis_letter_grade_ck CHECK (REGEXP_LIKE(letter_grade, '^[A-D][+-]?|F|I$')),
    CONSTRAINT sis_student_course_record_pk PRIMARY KEY (course_registration#, semester_code, student_id),
    CONSTRAINT sis_course_registration_fk FOREIGN KEY (course_registration#) REFERENCES sis_student(course_registration#),
    CONSTRAINT sis_semester_code_fk FOREIGN KEY (semester_code) REFERENCES sis_student(semester_code),
    CONSTRAINT sis_student_id_fk FOREIGN KEY (student_id) REFERENCES sis_student(student_id)
);


set echo ONset linesize 132set pagesize 66spool "C:\cprg250s\sis-project\SISCreateOutput.txt" drop all the tables, child table first, parent seconddrop table sis_student_course_record cascade constraints;drop table sis_student_credential cascade constraints;drop table sis_instructor_course cascade constraints;drop table sis_schedule_course cascade constraints;drop table sis_course_within_cred cascade constraints;drop table sis_course_preq cascade constraints;drop table sis_course cascade constraints;drop table sis_student cascade constraints;drop table sis_credential cascade constraints;drop table sis_instructor cascade constraints;-- need to double check on these FKs -- create all the tables, parent first, child SECOND-- create sis_instructor herecreate table sis_instructor( instructor_id integer primary key, first_name NVARCHAR2(50) not null, last_name NVARCHAR2(50) not null, address NVARCHAR2(100) not null, city NVARCHAR2(50) not null, prov NVARCHAR2(2) not null   constraints sis_instructor_prov_ck   check (prov in ('AB', 'BC', 'MB', 'NB', 'NL', 'NS', 'NT', 'NU', 'ON', 'PE', 'QC', 'SK', 'YT')), postal_code nchar(5) not null, phone_number VARCHAR2(12) not null   constraints sis_instructor_phone_number_ck   check (REGEXP_LIKE(phone_number, '^[0-9]{3}\.[0-9]{3}\.[0-9]{4}$')), email NVARCHAR2(100) not null   unique   check (regexp_like(email, '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$')));-- create sis_credential herecreate table sis_credential( credential# integer primary key, school NVARCHAR2(100) not null, name NVARCHAR2(100) not null, type NVARCHAR2(2) not null check(type in ('MI', 'FT', 'CT', 'PD', 'AD', 'D'))); -- create sis_student herecreate table sis_student( student_id integer primary key, first_name NVARCHAR2(50) not null, last_name NVARCHAR2(50) not null, status nchar(2) not null check(status in ('A', 'AP', 'S', 'E')), status_date date not null, phone VARCHAR2(12) check (REGEXP_LIKE(phone, '^[0-9]{3}\.[0-9]{3}\.[0-9]{4}$')), email NVARCHAR2(100) not null   unique   check (regexp_like(email, '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'))); -- create sis_course herecreate table sis_course ( course_code nchar(7) primary key  constraints sis_course_code_ck check(regexp_like (course_code, '^[A-Z]{4}[0-9]{3}$')), name NVARCHAR2(100) not null, num_of_credits number(2,1) not null   constraints sis_course_num_of_credits check (num_of_credits > 0 and num_of_credits < 10)); -- create sis_course_preq herecreate table sis_course_preq( course_code nchar(7) primary key, pre_course_code nchar(7), constraints sis_course_preq_course_code_fk   foreign key(course_code) references sis_course(course_code)); -- create sis_course_within_cred herecreate table sis_course_within_cred( credential# integer, course_code nchar(7), type_flag number(1)  constraints sis_course_within_cred_type_flag_ck  check (type_flag in (0, 1)), constraints sis_course_within_cred_pk   primary key(credential#, course_code), constraints sis_course_within_cred_credential_fk   foreign key(credential#) references sis_credential(credential#), constraints sis_course_within_cred_course_code_fk  foreign key(course_code) references sis_course(course_code)); -- create sis_schedule_course herecreate table sis_schedule_course( course_registration# number(5), semester_code nchar(6), course_code nchar(7) not null, section_code nchar(1) not null  constraints sis_schedule_course_section_code_ck   check (regexp_like(section_code, '[A-Z]{1}')), constraints sis_schedule_course_pk   primary key(course_registration#, semester_code), constraints sis_schedule_course_course_code_fk  foreign key(course_code) references sis_course(course_code)); -- create sis_instructor_course herecreate table sis_instructor_course( instructor_id integer, course_registration# number(5), semester_code nchar(6), constraints sis_instructor_course_pk   primary key(instructor_id, course_registration#, semester_code), constraints sis_instructor_course_instructor_id   foreign key (instructor_id) references sis_instructor(instructor_id), constraints sis_instructor_course_fk   foreign key (course_registration#, semester_code) references sis_schedule_course(course_registration#, semester_code)); -- create sis_student_credentialcreate table sis_student_credential( student_id integer, credential# integer, start_date date not null, completion_date date, credential_status nchar(1) not null  constraints sis_student_credential_cred_status_ck  check(credential_status in ('A', 'G', 'E')), GPA number(3,2) not null, constraints sis_student_credential_pk primary key (student_id, credential#), constraints sis_student_credential_student_id_fk   foreign key (student_id) references sis_student(student_id), constraints sis_student_credential_cred_fk   foreign key (credential#) references sis_credential(credential#)); -- create sis_student_course_recordcreate table sis_student_course_record( course_registration# integer, semester_code nchar(10), course_code nchar(7) not null, student_id integer, credential# integer, letter_grade nchar(2)  constraints sis_letter_grade_ck   check (letter_grade in ('A', 'A-', 'A+', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'F', 'I')), constraints sis_student_course_record_pk   primary key (course_registration#, semester_code, student_id), constraints sis_student_course_record_course_rgn_semester_fk   foreign key(course_registration#, semester_code) references sis_schedule_course(course_registration#, semester_code), constraints sis_student_curse_record_student_id_fk   foreign key(student_id) references sis_student(student_id), constraints sis_student_course_record_cred_fk   foreign key(credential#) references sis_credential(credential#));  spool off


