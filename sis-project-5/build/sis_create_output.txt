SQL> -- drop all the tables, child table first, parent second
SQL> drop table sis_student_course_record cascade constraint;

Table dropped.

SQL> drop table sis_student_credential cascade constraint;

Table dropped.

SQL> drop table sis_instructor_course cascade constraint;

Table dropped.

SQL> drop table sis_schedule_course cascade constraint;

Table dropped.

SQL> drop table sis_course_within_cred cascade constraint;

Table dropped.

SQL> drop table sis_course_preq cascade constraint;

Table dropped.

SQL> drop table sis_course cascade constraint;

Table dropped.

SQL> drop table sis_student cascade constraint;

Table dropped.

SQL> drop table sis_credential cascade constraint;

Table dropped.

SQL> drop table sis_instructor cascade constraint;

Table dropped.

SQL> 
SQL> -- need to double check on these FKs
SQL> 
SQL> -- create all the tables, parent first, child SECOND
SQL> -- create sis_instructor here
SQL> create table sis_instructor(
  2  	     instructor_id integer primary key,
  3  	     first_name NVARCHAR2(50) not null,
  4  	     last_name NVARCHAR2(50) not null,
  5  	     address NVARCHAR2(100) not null,
  6  	     city NVARCHAR2(50) not null,
  7  	     prov nchar(2) not null
  8  		     constraint sis_instructor_prov_ck
  9  		     check (prov in ('AB', 'BC', 'MB', 'NB', 'NL', 'NS', 'NT', 'NU', 'ON', 'PE', 'QC', 'SK', 'YT')),
 10  	     postal_code nchar(7) not null
 11  		     constraint sis_instructor_postal_code_ck
 12  		     check(regexp_like(postal_code, '^[A-Z][0-9][A-Z] [0-9][A-Z][0-9]$')),
 13  	     phone_number nchar(12) not null
 14  		     constraint sis_instructor_phone_number_ck
 15  		     check (REGEXP_LIKE(phone_number, '^[0-9]{3}\.[0-9]{3}\.[0-9]{4}$')),
 16  	     email NVARCHAR2(100) not null
 17  		     unique
 18  		     check (regexp_like(email, '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'))
 19  );

Table created.

SQL> -- create sis_credential here
SQL> create table sis_credential(
  2  	     credential# integer primary key,
  3  	     school NVARCHAR2(100) not null,
  4  	     name NVARCHAR2(100) not null,
  5  	     type NVARCHAR2(2) not null
  6  		     constraint sis_credential_type_ck check(type in ('MI', 'FT', 'CT', 'PD', 'AD', 'D'))
  7  );

Table created.

SQL> 
SQL> -- create sis_student here
SQL> create table sis_student(
  2  	     student_id integer primary key,
  3  	     first_name NVARCHAR2(50) not null,
  4  	     last_name NVARCHAR2(50) not null,
  5  	     status NVARCHAR2(2) not null constraint sis_student_status_ck check(status in ('A', 'AP', 'S', 'E')),
  6  	     status_date date not null,
  7  	     phone nchar(12) constraint sis_student_phone_ck check (REGEXP_LIKE(phone, '^[0-9]{3}\.[0-9]{3}\.[0-9]{4}$')),
  8  	     email NVARCHAR2(100) not null
  9  		     unique
 10  		     constraint sis_student_email_ck
 11  		     check (regexp_like(email, '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'))
 12  );

Table created.

SQL> 
SQL> -- create sis_course here
SQL> create table sis_course (
  2  	 course_code NCHAR(7),
  3  	 name NVARCHAR2(100) NOT NULL,
  4  	 num_of_credits NUMBER(2,1) NOT NULL
  5  );

Table created.

SQL> 
SQL> alter table sis_course
  2  add constraint sis_course_pk primary key (course_code);

Table altered.

SQL> 
SQL> alter table sis_course
  2  add constraint sis_course_code_ck
  3  check (REGEXP_LIKE(course_code, '^[A-Z]{4}[0-9]{3}$'));

Table altered.

SQL> 
SQL> alter table sis_course
  2  add constraint sis_course_num_of_credits_ck
  3  check (num_of_credits > 0 AND num_of_credits < 10);

Table altered.

SQL> 
SQL> 
SQL> -- create sis_course_preq here
SQL> create table sis_course_preq (
  2  	 course_code NCHAR(7),
  3  	 pre_course_code NCHAR(7)
  4  );

Table created.

SQL> 
SQL> alter table sis_course_preq
  2  add constraint sis_course_preq_pk primary key (course_code, pre_course_code);

Table altered.

SQL> 
SQL> alter table sis_course_preq
  2  add constraint sis_course_preq_course_code_fk
  3  foreign key (course_code) references sis_course(course_code);

Table altered.

SQL> 
SQL> alter table sis_course_preq
  2  add constraint sis_course_preq_pre_course_code_fk
  3  foreign key (pre_course_code) references sis_course(course_code);

Table altered.

SQL> 
SQL> 
SQL> -- create sis_course_within_cred here
SQL> create table sis_course_within_cred(
  2  	     credential# integer,
  3  	     course_code nchar(7),
  4  	     type_flag number(1)
  5  		     constraint sis_course_within_cred_type_flag_ck check (type_flag in (0, 1)),
  6  	     constraint sis_course_within_cred_pk
  7  		     primary key(credential#, course_code),
  8  	     constraint sis_course_within_cred_credential_fk
  9  		     foreign key(credential#) references sis_credential(credential#),
 10  	     constraint sis_course_within_cred_course_code_fk
 11  		     foreign key(course_code) references sis_course(course_code)
 12  );

Table created.

SQL> 
SQL> -- create sis_schedule_course here
SQL> create table sis_schedule_course(
  2  	     course_registration# nchar(5),
  3  	     semester_code nchar(6)
  4  		     constraint sis_schedule_course_semester_code_ck
  5  		     check(regexp_like(semester_code, '^(19|20)\d{2}(01|02|03|04)$')),
  6  	     course_code nchar(7) not null,
  7  	     section_code nchar(1) not null
  8  		     constraint sis_schedule_course_section_code_ck
  9  		     check (regexp_like(section_code, '[A-Z]{1}')),
 10  	     constraint sis_schedule_course_pk
 11  		     primary key(course_registration#, semester_code),
 12  	     constraint sis_schedule_course_course_code_fk
 13  		     foreign key(course_code) references sis_course(course_code)
 14  );

Table created.

SQL> 
SQL> -- create sis_instructor_course here
SQL> create table sis_instructor_course(
  2  	     instructor_id integer,
  3  	     course_registration# nchar(5),
  4  	     semester_code nchar(6),
  5  	     constraint sis_instructor_course_pk
  6  		     primary key(instructor_id, course_registration#, semester_code),
  7  	     constraint sis_instructor_course_instructor_id
  8  		     foreign key (instructor_id) references sis_instructor(instructor_id),
  9  	     constraint sis_instructor_course_course_rgn_semester_code_fk
 10  		     foreign key (course_registration#, semester_code) references sis_schedule_course(course_registration#, semester_code)
 11  );

Table created.

SQL> 
SQL> -- create sis_student_credential
SQL> create table sis_student_credential(
  2  	     student_id integer,
  3  	     credential# integer,
  4  	     start_date date not null,
  5  	     completion_date date,
  6  	     credential_status nchar(1) not null
  7  		     constraint sis_student_credential_cred_status_ck
  8  		     check(credential_status in ('A', 'G', 'E')),
  9  	     GPA number(3,2) not null
 10  		     constraint sis_student_credential_gpa_ck check(GPA between 0 and 4.00),
 11  	     constraint sis_student_credential_pk primary key (student_id, credential#),
 12  	     constraint sis_student_credential_student_id_fk
 13  		     foreign key (student_id) references sis_student(student_id),
 14  	     constraint sis_student_credential_cred_fk
 15  		     foreign key (credential#) references sis_credential(credential#)
 16  );

Table created.

SQL> 
SQL> -- create sis_student_course_record
SQL> create table sis_student_course_record(
  2  	     course_registration# nchar(5),
  3  	     semester_code nchar(6),
  4  	     course_code nchar(7) not null,
  5  	     student_id integer,
  6  	     credential# integer,
  7  	     letter_grade nchar(2)
  8  		     constraint sis_letter_grade_ck
  9  		     check (letter_grade in ('A', 'A-', 'A+', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'F', 'I')),
 10  	     constraint sis_student_course_record_pk
 11  		     primary key (course_registration#, semester_code, student_id),
 12  	     constraint sis_student_course_record_course_rgn_semester_fk
 13  		     foreign key(course_registration#, semester_code) references sis_schedule_course(course_registration#, semester_code),
 14  	     constraint sis_student_course_record_student_id_fk
 15  		     foreign key(student_id) references sis_student(student_id),
 16  	     constraint sis_student_course_record_cred_fk
 17  		     foreign key(credential#) references sis_credential(credential#)
 18  );

Table created.

SQL> 
SQL> 
SQL> spool off
